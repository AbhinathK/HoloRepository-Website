{"version":3,"sources":["images/lung_capture_black.png","components/shared/Header.js","components/shared/Footer.js","components/HomePage.js","components/GroupMemberPage.js","components/IntroPage.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","SharedHeader","props","handleItemClick","e","name","setState","activeItem","state","this","Menu","fixed","id","pointing","secondary","size","Container","Item","as","Link","to","style","padding","Image","src","active","onClick","Icon","href","position","Component","SharedFooter","width","height","display","marginLeft","marginRight","marginBottom","HomePage","minHeight","backgroundImage","BackgroundImage","backgroundPosition","backgroundSize","marginTop","Segment","backgroundColor","textAlign","fontSize","fontWeight","color","Button","primary","vertical","Grid","container","stackable","verticalAlign","Row","window","scrollTo","GroupMemberPage","content","Column","circular","Divider","IntroPage","frameborder","allow","allowfullscreen","Card","fluid","Content","Header","App","basename","process","exact","path","render","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1fdc3a1f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/lung_capture_black.5ba96b99.png\";","import React, { Component } from \"react\";\nimport {\n    Icon,\n    Image,\n    Menu,\n    Container\n} from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Header.css\";\n\nclass SharedHeader extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            activeItem: this.props.activeItem\n        };\n    }\n\n    handleItemClick = (e, { name }) => this.setState({ activeItem: name });\n\n    render() {\n        const { activeItem } = this.state;\n\n        return (\n            <Menu fixed='top' id = \"menu\" pointing secondary size='huge'>\n                <Container >\n                    <Menu.Item as={Link} to=\"/home\" style={{ padding: '1em 2em'}}>\n                        <Image src=\"Images/logo_with_title.png\" size = \"small\"/>\n                    </Menu.Item>\n\n                    <Menu.Item\n                        name='Home'\n                        active={activeItem === 'Home'}\n                        onClick={this.handleItemClick}\n                        as={Link} to=\"/home\"\n                    >\n                        <Icon name = \"home\"/>\n                        {\"Home\"}\n                    </Menu.Item>\n\n                    <Menu.Item\n                        name='Overview'\n                        active={activeItem === 'Overview'}\n                        onClick={this.handleItemClick}\n                        as={Link} to=\"/overview\"\n                    >\n                        <Icon name = \"list ul\"/>\n                        {\"Overview\"}\n                    </Menu.Item>\n\n                    <Menu.Item\n                        name='Group members'\n                        active={activeItem === 'Group members'}\n                        onClick={this.handleItemClick}\n                        as={Link} to=\"/groupmember\"\n                    >\n                        <Icon name = \"users\"/>\n                        {\"Group Members\"}\n                    </Menu.Item>\n\n                    <Menu.Item\n                        name='github'\n                        as='a'\n                        active={activeItem === 'github'}\n                        onClick={this.handleItemClick}\n                        href= \"https://github.com/AppertaFoundation/HoloRepository-2020\"\n                        position = 'right'\n                    >\n                        <Icon name = \"github\"/>\n                        {\"GitHub\"}\n                    </Menu.Item>\n\n                    <Menu.Item\n                        name='previous'\n                        as='a'\n                        active={activeItem === 'previous'}\n                        onClick={this.handleItemClick}\n                        href= \"https://fanbomeng97.github.io/HoloRepository-Website/#/\"\n                        position = 'right'\n                    >\n                        <Icon name = \"archive\"/>\n                        {\"Previous Version\"}\n                    </Menu.Item>\n                </Container>\n            </Menu>\n        );\n    }\n}\n\nexport default SharedHeader;\n","import React, { Component } from \"react\";\nimport \"./Footer.css\";\nimport {Image} from \"semantic-ui-react\";\n\nclass SharedFooter extends Component {\n    render() {\n        return (\n            <footer>\n                <Image src= \"Images/logos.png\" style={{\n                    width: '814px',\n                    height: '58.5px',\n                    display: 'block',\n                    marginLeft: 'auto',\n                    marginRight: 'auto',\n                    marginBottom: '2em'}}/>\n                <div>Copyright (C) 2020 University College London</div>\n                <div>\n                    Read our{\" \"}\n                    <a href=\"https://github.com/AppertaFoundation/HoloRepository-2020\">Source Code</a> and{\" \"}\n                    <a href=\"https://www.gnu.org/licenses/agpl-3.0.en.html\">Licence</a>\n                </div>\n            </footer>\n        );\n    }\n}\n\nexport default SharedFooter;\n","import React, { Component } from \"react\";\nimport SharedHeader from \"./shared/Header\";\nimport SharedFooter from \"./shared/Footer\";\nimport BackgroundImage from \"../images/lung_capture_black.png\";\nimport {\n    Header,\n    Segment,\n    Grid,\n    Container,\n    Button,\n    Icon\n} from \"semantic-ui-react\";\nimport {Link} from \"react-router-dom\";\n\nclass HomePage extends Component {\n    render() {\n        return (\n            <div>\n                <SharedHeader activeItem='Home'/>\n                <div style={{\n                        minHeight: 700,\n                        backgroundImage: `url(${BackgroundImage})`,\n                        backgroundPosition: 'center',\n                        backgroundSize: 'cover',\n                        marginTop: '5',\n                    }}>\n                    <Segment style = {{\n                        backgroundColor: 'rgba(0,0,0,0.5)',\n                        backgroundPosition: 'center',\n                        backgroundSize: 'cover',\n                        height: 700}}>\n                        <Container textAlign='center'>\n                            <p style={{\n                                    fontSize: '6em',\n                                    fontWeight: 'normal',\n                                    color: 'white',\n                                    marginTop: 150\n                                }}>\n                                HoloRepository 2020\n                            </p>\n                            <p style={{\n                                    fontSize: '1.8em',\n                                    fontWeight: 'normal',\n                                    color: 'white'\n\n                                }}>\n                                The HoloRepository 2020 Proof of Concept is an open source FHIR enabled research project that enables \n                                CT and MRI DICOM scans of the brain, lungs, chest, abdomen and kidneys to be rendered as a 3D view \n                                using the latest techniques for organ segmentation.\n                            </p>\n                            <Button primary size='huge' as={Link} to=\"/overview\"style={{marginTop: 50}}>\n                                Start Explore\n                                <Icon name='right arrow' />\n                            </Button>\n                        </Container>\n                    </Segment>\n                </div>\n\n                <Segment style={{ padding: '8em 0em'}} vertical>\n                    <Container textAlign='justified'>\n                        <Grid container stackable verticalAlign='middle'>\n                            <Grid.Row>\n                                <Header as='h3' style={{ fontSize: '2em' }}>\n                                    <a href=\"https://github.com/carlo3247/HoloRepository2020Viewer\">HoloRepository 2020 Viewer</a>\n                                </Header>\n                                <p style={{ fontSize: '1.1em' }}>\n                                A python tool that incorporates a barebone version of HoloPipelines to segment and generate 3D models of various anatomical stuctures. \n                                These include the lungs, brain, kidneys, abdominals and bones. \n                                It works on your laptop/PC as a 3D viewer rendering images straight from CT/MRI DICOM scan files locally, \n                                with its HoloPipelines segmentation component. \n                                This is intended for clinicians to present and teach with.\n                                </p>\n                                <Header as='h3' style={{ fontSize: '2em' }}>\n                                    <a href=\"https://github.com/AbhinathK/NUC-Optimized-HoloRepository-2020\">HoloRepository 2020 for NUCs</a>\n                                </Header>\n                                <p style={{ fontSize: '1.1em' }}>\n                                    This is an optimised build for clinical Intel(™) NUCs that can show 3D views and simulate a\n                                        local FHIR enabled database for researchers looking to explore experimental results.\n                                        This is intended for clinical research settings.\n                                </p>\n                                <Header as='h3' style={{ fontSize: '2em' }}>\n                                    <a href=\"https://github.com/AbhinathK/CloudHoloRepository2020-Core\">HoloRepository 2020 for Azure and HoloLens 2</a>\n                                </Header>\n                                <p style={{ fontSize: '1.1em' }}>\n                                This is an Azure Cloud solution that works with the newly released HoloLens 2 and facilitates cloud storage of 3D models.\n                                </p>\n                            </Grid.Row>\n                        </Grid>\n                    </Container>\n                </Segment>\n                <SharedFooter/>\n            </div>\n        );\n    }\n\n    componentDidMount() {\n        window.scrollTo(0, 0)\n    }\n}\n\nexport default HomePage;\n","import React, { Component } from \"react\";\nimport SharedHeader from \"./shared/Header\";\nimport SharedFooter from \"./shared/Footer\";\nimport {\n    Header,\n    Segment,\n    Image,\n    Grid,\n    Divider\n} from \"semantic-ui-react\";\n\nclass GroupMemberPage extends Component {\n    render() {\n        return (\n            <div>\n                <SharedHeader activeItem='Group members' />\n                <Segment vertical>\n                    <Header\n                        textAlign='center'\n                        as='h1'\n                        content='Group Members'\n                        style={{\n                            fontSize: '4em',\n                            fontWeight: 'normal',\n                            marginBottom: 0,\n                            marginTop: '2em',\n                        }} />\n                    <Grid container style={{ padding: '5em 0em' }}>\n                        <Grid.Row>\n                            <p style={{ padding: '0em 1em' }}>\n                                (Sorted by alphabetical)\n                            </p>\n                        </Grid.Row>\n                        <Grid.Row>\n                            <Grid.Column width={3}>\n                                <Image src=\"Images/Daren.png\" circular />\n                            </Grid.Column>\n                            <Grid.Column width={13}>\n                                <Header as='h3' style={{ fontSize: '2em' }}>\n                                    Alfred, Daren\n                                </Header>\n                                <p style={{ fontSize: '1.2em' }}><b>HoloRegistration2020</b></p>\n                                <p style={{ fontSize: '1.2em' }}><b>Email:</b>daren.alfred.16@ucl.ac.uk</p>\n                            </Grid.Column>\n                        </Grid.Row>\n\n                        <Divider />\n\n                        <Grid.Row>\n                            <Grid.Column width={3}>\n                                <Image src=\"Images/immanuel.jpg\" circular />\n                            </Grid.Column>\n                            <Grid.Column width={13}>\n                                <Header as='h3' style={{ fontSize: '2em' }}>\n                                    Baskaran, Immanuel\n                                </Header>\n                                <p style={{ fontSize: '1.2em' }}><b>HoloPipelines Optimisations</b></p>\n                                <p style={{ fontSize: '1.2em' }}><b>Email:</b>immanuel.baskaran.16@ucl.ac.uk</p>\n                            </Grid.Column>\n                        </Grid.Row>\n\n                        <Divider />\n\n                        <Grid.Row>\n                            <Grid.Column width={3}>\n                                <Image src='Images/Abhinath1.png' circular />\n                            </Grid.Column>\n                            <Grid.Column width={13}>\n                                <Header as='h3' style={{ fontSize: '2em' }}>\n                                    Kumar, Abhinath\n                                </Header>\n                                <p style={{ fontSize: '1.2em' }}><b>System Architect</b></p>\n                                <p style={{ fontSize: '1.2em' }}><b>Email:</b>abhinath.kumar.16@ucl.ac.uk</p>\n                            </Grid.Column>\n                        </Grid.Row>\n\n                        <Divider />\n\n                        <Grid.Row>\n                            <Grid.Column width={3}>\n                                <Image src=\"Images/carlo.jpg\" circular />\n                            </Grid.Column>\n                            <Grid.Column width={13}>\n                                <Header as='h3' style={{ fontSize: '2em' }}>\n                                    Winkelhake, Carlo\n                                </Header>\n                                <p style={{ fontSize: '1.2em' }}><b>Machine learning models</b></p>\n                                <p style={{ fontSize: '1.2em' }}><b>Email:</b>carlo.winkelhake.16@ucl.ac.uk</p>\n                            </Grid.Column>\n                        </Grid.Row>\n                    </Grid>\n                </Segment>\n                <SharedFooter />\n            </div>\n        );\n    }\n\n    componentDidMount() {\n        window.scrollTo(0, 0)\n    }\n}\n\nexport default GroupMemberPage;\n","import React, { Component } from \"react\";\nimport SharedHeader from \"./shared/Header\";\nimport SharedFooter from \"./shared/Footer\";\nimport {\n    Header,\n    Segment,\n    Grid,\n    Divider,\n    Container,\n    Card,\n    Image,\n} from \"semantic-ui-react\";\n\nclass IntroPage extends Component {\n    render() {\n        return (\n            <div>\n                <SharedHeader activeItem='Overview'/>\n                    <Header\n                        textAlign='center'\n                        as='h1'\n                        content='Overview'\n                        style={{\n                            fontSize: '4em',\n                            fontWeight: 'normal',\n                            marginBottom: 0,\n                            marginTop: '2em',\n                        }}/>\n                <Segment style={{ padding: '5em 0em'}} vertical>\n                    <Container textAlign='justified'>\n                        <Grid container stackable verticalAlign='middle'>\n                            <Grid.Column width={16}>\n                                <Header as='h3' style={{ fontSize: '2em' }}>\n                                    Background\n                                </Header>\n\n                                <p style={{ fontSize: '1.2em' }}>\n                                    Recent technical advancements in the realm of augmented reality (AR) and the availability\n                                    of consumer head-mounted display (HMD) devices such as the Microsoft HoloLens have opened\n                                    a wealth of opportunities for healthcare applications, particularly in medical imaging.\n                                    Several approaches have been proposed to transform imaging studies, such as CT or MRI\n                                    scans, into three-dimensional models which can be inspected and manipulated in an AR\n                                    experience [1–4]. Generally, all studies agree that the technology is very promising\n                                    and may even revolutionise the practice of medicine [5]. However, virtually every\n                                    existing workflow relies on significant manual guidance to conduct steps like segmentation\n                                    or conversion to polygonal models.\n                                </p>\n\n                                <p style={{ fontSize: '1.2em' }}>\n                                    Neural networks can help automate many tedious tasks and are increasingly used in medical\n                                    imaging. Architectures such as the 3D U-Net [6] generate models which autonomously create\n                                    segmentation maps, even with relatively little training data. However, translating these\n                                    advancements from theory to clinical practice has unique challenges: The source code may\n                                    not be available, documentation may be missing or require too much technical knowledge.\n                                    Furthermore, different operating systems, software packages and dependencies obstruct\n                                    successful usage [7].\n                                </p>\n                                <p style={{ fontSize: '1.2em' }}>\n                                    With the HoloRepository project, we intend to build the technical base for a seamless\n                                    workflow that allows practitioners to generate 3D models from imaging studies and access\n                                    them in an AR setting with as little manual involvement as possible. Pre-trained neural\n                                    networks can be packaged into shareable Docker containers and accessed with a unified\n                                    interface. Additionally, the Fast Healthcare Interoperability Resources (FHIR) standard,\n                                    which is rapidly being adapted and also has a significant impact on the field of radiology [8],\n                                    will connect the 3D models with existing patient health records.\n                                </p>\n                                <Divider />\n\n                                <Header as='h3' style={{ fontSize: '2em' }}>\n                                HoloRepository 2020 Viewer\n                                </Header>\n                                <iframe style={{display:'block'}} width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/CDra3Yh4Qwo\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n\n                                <p style={{ fontSize: '1.2em' }}>\n                                    This repository contains a python tool that incorporates a barebone version of HoloPipelines, \n                                    wich is part of HoloRepository, to segment and generate 3D models of various anatomical stuctures.\n                                     These include the lungs, brain, kidneys, abdominals and bones.\n                                </p>\n\n                                <p style={{ fontSize: '1.2em' }}>\n                                Through the GUI interface, one can either process a new medical scan or open an existing hologram. \n                                The created objects can be viewed through a proof of concept hologram viewer built on top of vtkplotter. \n                                The 2D View will attempt to open the scan using the default program selected for the task. For this, we recommend mango.\n                                </p>\n                                    \n                                <p style={{ fontSize: '1.2em' }}>\n                                On Windows, the tool also includes an augmented reality (AR) view, which uses the HoloRegistration application. \n                                This enables segmented organ models to be overlayed over the human body using the webcam.\n                                </p>\n                                <Image src= \"Images/HoloViewerArchitecture.png\" style={{\n                                    width: 'auto',\n                                    height: 'auto',\n                                    display: 'block',\n                                    marginLeft: 'auto',\n                                    marginRight: 'auto',\n                                    marginBottom: '2em'}}/>\n                                <Divider />\n                                <Header as='h3' style={{ fontSize: '2em' }}>\n                                HoloRepository 2020 for NUCs\n                                </Header>\n                                <p style={{ fontSize: '1.2em' }}>\n                                The NUC optimized HoloRepository 2020 is an edition of HoloRepository 2020, built and optimized for Intel NUCs \n                                (Next unit of Computing) in a clinical research environment. This edition provides an offline instance of HoloRepository, \n                                as the architecture makes use of a local compute platform  and  simulates  a  local  FHIR  server.   Additionally, optimizations \n                                made to tthe HoloPipelines component, allow the system to leverage the hardware of \n                                the Intel NUC for increased performance.\n                                </p>\n                                <Image src= \"Images/deploymentviewNuc.png\" style={{\n                                    width: 'auto',\n                                    height: 'auto',\n                                    display: 'block',\n                                    marginLeft: 'auto',\n                                    marginRight: 'auto',\n                                    marginBottom: '2em'}}/>\n                                <Divider />\n                                <Header as='h3' style={{ fontSize: '2em' }}>\n                                HoloRepository 2020 for Azure and HoloLens 2\n                                </Header>\n                                <p style={{ fontSize: '1.2em' }}>\n                                    This is an Azure Cloud solution that works with the newly released HoloLens 2 and facilitates cloud storage of 3D models.\n                                </p>\n                                <Image src= \"Images/NewArchitecture.png\" style={{\n                                    width: 'auto',\n                                    height: 'auto',\n                                    display: 'block',\n                                    marginLeft: 'auto',\n                                    marginRight: 'auto',\n                                    marginBottom: '2em'}}/>\n                                <Divider />\n                                <Header as='h3' style={{ fontSize: '2em' }}>\n                                    HoloRepositoryUI\n                                </Header>\n                                \n                                <p style={{ fontSize: '1.2em' }}>\n                                    A web-based application that allows practitioners to browse their patients and manage the\n                                    generation of 3D models sourced from imaging studies like CT or MRI scans. The client-side\n                                    application is accompanied by an API server that is responsible for communicating with the\n                                    other components.\n                                </p>\n                                <Divider />\n                                <Header as='h3' style={{ fontSize: '2em' }}>\n                                    HoloPipelines\n                                </Header>\n                                <p style={{ fontSize: '1.2em' }}>\n                                    A service that performs the automatic generation of 3D models from 2D image\n                                    stacks. Pre-trained neural network models are deployed and accessed with this component\n                                    alongside traditional techniques like Hounsfield value thresholding.\n                                </p>\n                                <Divider />\n                                <Header as='h3' style={{ fontSize: '2em' }}>\n                                    HoloStorage\n                                </Header>\n                                <p style={{ fontSize: '1.2em' }}>\n                                    A cloud-based storage for medical 3D models and associated metadata. Entirely hosted on\n                                    Microsoft Azure, a FHIR server stores the structured medical data and a Blob Storage server\n                                    provides for the binary holographic data.\n                                </p>\n                                <Divider />\n                                <Header as='h3' style={{ fontSize: '2em' }}>\n                                    HoloStorageAccessor\n                                </Header>\n                                <p style={{ fontSize: '1.2em' }}>\n                                    An enhanced facade, offering a consistent interface to the HoloStorage and translating\n                                    the public REST API to internal FHIR queries. To facilitate development of 3rd party\n                                    components, the interface comes with an interactive OpenAPI documentation.\n                                </p>\n                                <Divider />\n                                <Header as='h3' style={{ fontSize: '2em' }}>\n                                    HoloStorageConnector\n                                </Header>\n                                <p style={{ fontSize: '1.2em' }}>\n                                    A Unity library handling the runtime network connections from HoloLens applications to\n                                    the HoloStorage. Distributed as a separate UnityPackage, this is meant to facilitate\n                                    development of 3rd party applications that plug into the HoloRepository ecosystem.\n                                </p>\n                                <Divider />\n                                <Header as='h3' style={{ fontSize: '2em' }}>\n                                    HoloRepository demo application\n                                </Header>\n                                <p style={{ fontSize: '1.2em' }}>\n                                    A simple application that demonstrates how to dynamically access 3D models stored in the\n                                    HoloStorage. The scenes can be distributed alongside the Connector library and serve as\n                                    examples and interactive documentation.\n                                </p>\n                                <Divider />\n                                <Header as='h3' style={{ fontSize: '2em' }}>\n                                    HoloSynthAccess\n                                </Header>\n                                <p style={{ fontSize: '1.2em' }}>\n                                HoloSynthAccess is a new component of the HoloRepository, which connects the system to the \n                                Cancer Imaging Archive (CIA), one of the world’s largest open-access databases of medical images \n                                for cancer research.  Users are able to use the web-application to query for imaging studies \n                                of over 70 different anatomical structures.  Users can also find information such as modality, \n                                date, and description of around 30.9 million radiology images. Studies can be downloaded directly to \n                                your local machine for  further  research  and  use.  Additionally,  a  subset  of  these  studies  (modalities  and  anatomy \n                                supported  by  HoloRepository)  can  be  sent  to  the  simulated  EHR,  which  can  then  be  used  for model generation.\n                                </p>\n                                <Divider />\n                                <Header as='h3' style={{ fontSize: '2em' }}>\n                                    HoloRegistration\n                                </Header>\n                                <p style={{ fontSize: '1.2em' }}>\n                                The HoloRegistation 2020 application allows segmented organ models to be overlayed over the human body \n                                through an augmented reality experience. Organ models loaded can automatically locate themselves at the \n                                correct position and size, moving along with the user.  It’s design also allows for custom organ configurations \n                                to be added at anytime without any changes to code and it supports any type of camera, including webcams.\n                                </p>\n                                <Divider />\n\n                                \n                            </Grid.Column>\n                        </Grid>\n                        <Card fluid style={{ marginTop: '3em'}}>\n                            <Card.Content>\n                                <Card.Header>References</Card.Header>\n                            </Card.Content>\n                            <Card.Content>\n                                <p>[1]\tSmith CM. Medical Imaging in Mixed Reality: A holographics software pipeline.\n                                    University College London, 2018.</p>\n                                <p>[2]\tPratt P, Ives M, Lawton G, Simmons J, Radev N, Spyropoulou L, et al. Through the\n                                    HoloLensTM looking glass: augmented reality for extremity reconstruction surgery using\n                                    3D vascular models with perforating vessels. Eur Radiol Exp\n                                    2018;2:2. doi:10.1186/s41747-017-0033-2.</p>\n                                <p>[3]\tAffolter R, Eggert S, Sieberth T, Thali M, Ebert LC. Applying augmented reality\n                                    during a forensic autopsy—Microsoft HoloLens as a DICOM viewer. Journal of Forensic\n                                    Radiology and Imaging 2019;16:5–8. doi:10.1016/j.jofri.2018.11.003.</p>\n                                <p>[4]\tPage M. Visualization of Complex Medical Data Using Next-Generation Holographic\n                                    Techniques 2017.</p>\n                                <p>[5]\tBeydoun A, Gupta V, Siegel E. DICOM to 3D Holograms: Use Case for Augmented\n                                    Reality in Diagnostic and Interventional Radiology. SIIM Scientific Session Posters\n                                    and Demonstrations 2017:4.</p>\n                                <p>[6]\tÇiçek Ö, Abdulkadir A, Lienkamp SS, Brox T, Ronneberger O. 3D U-Net: Learning\n                                    Dense Volumetric Segmentation from Sparse Annotation. ArXiv:160606650 [Cs] 2016.</p>\n                                <p>[7]\tBeers A, Brown J, Chang K, Hoebel K, Gerstner E, Rosen B, et al. DeepNeuro: an\n                                    open-source deep learning toolbox for neuroimaging. ArXiv:180804589 [Cs] 2018.</p>\n                                <p>[8]\tKamel PI, Nagy PG. Patient-Centered Radiology with FHIR: an Introduction to the\n                                    Use of FHIR to Offer Radiology a Clinically Integrated Platform. J Digit Imaging\n                                    2018;31:327–33. doi:10.1007/s10278-018-0087-6.</p>\n                            </Card.Content>\n                        </Card>\n                    </Container>\n\n                </Segment>\n                <SharedFooter/>\n            </div>\n        );\n    }\n\n    componentDidMount() {\n        window.scrollTo(0, 0)\n    }\n}\n\nexport default IntroPage;\n","import React, { Component } from \"react\";\nimport HomePage from \"./HomePage\";\nimport GroupMemberPage from \"./GroupMemberPage\";\nimport IntroPage from \"./IntroPage\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\n\nclass App extends Component {\n    render() {\n        return (\n            <div>\n                <BrowserRouter basename={process.env.PUBLIC_URL}>\n                    <Switch>\n                        <Route\n                            exact\n                            path=\"/\"\n                            render={() => (<HomePage/>)}\n                        />\n                        <Route\n                            exact\n                            path=\"/home\"\n\n                            render={() => (<HomePage/>)}\n                        />\n                        <Route\n                            exact\n                            path=\"/overview\"\n                            render={() => (<IntroPage/>)}\n                        />\n                        <Route\n                            exact\n                            path=\"/groupmember\"\n                            render={() => (<GroupMemberPage/>)}\n                        />\n                    </Switch>\n                </BrowserRouter>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\n\nReactDOM.render(<Router basename={process.env.PUBLIC_URL}><App /></Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}